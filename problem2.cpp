/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

#include <iostream>
//#include <vector>

int n = 400000;

int fibonacci(int i)
{
	int fib = 0;
	if (i == 0)
		return 0;
	else if (i == 1)
		return 1;
	else
		return fibonacci(i-1) + fibonacci(i-2);	
}
int fibonacci_sum(int f[100])
{
	int sum = 0, i = 0;
	for (i = 0; i <= 100; i++)
	{
		sum += f[i];
	}
	return sum;
}
main()
{
	int i = 0;
	int fib[100];
	//std::vector<int> fib;
	while (fib[i] <= n)
	{
		fib[i] = fibonacci(i);
		i++;
	}
	while (i <= 100)
	{
		std::cout<<"\n"<<fib[i]<<std::endl;
		i++;
	}
	//std::cout<<fibonacci_sum(fib);
}
